<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="http://schema.sporniket-studio.com/model/set/javabean" xmlns="http://schema.sporniket-studio.com/model/set/javabean"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">

	<!-- Base types -->
	<xs:simpleType name="PropertyMode">
		<xs:annotation>
			<xs:documentation>
				Javabean property implementation type.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="basic">
				<xs:annotation>
					<xs:documentation>Unbounded properties</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="boundable">
				<xs:annotation>
					<xs:documentation>Bounded properties, one can add a PropertyChangeListener on this property.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="vetoable">
				<xs:annotation>
					<xs:documentation>Vetoed properties, one can add a VetoableChangeListener on this property.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!-- Annotation -->
	<xs:complexType name="SetAnnotation">
		<xs:annotation>
			<xs:documentation>Annotations common to the entire set specification.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="author" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Author put in a @author javadoc tag.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="licencenotice" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Notice of the licence, added after the description in the javadoc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="version" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Version, put in a @version javadoc tag.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="see" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Reference, put in a @see javadoc tag.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GroupAnnotation">
		<xs:annotation>
			<xs:documentation>Annotations added to a package, a bean</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="summary" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Catch phrase that will be seen in the summary table of the javadoc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Description put in the javadoc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="see" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Reference, put in a @see javadoc tag.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PropertyAnnotation">
		<xs:annotation>
			<xs:documentation>Annotations added to a property</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="summary" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Catch phrase that will be seen in the summary table of the javadoc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Description put in the javadoc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="see" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Reference, put in a @see javadoc tag.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- Model -->
	<xs:complexType name="Property">
		<xs:annotation>
			<xs:documentation>Description of a javabean property.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="annotation" type="PropertyAnnotation" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Name of the property, following the javabeanconvention, e.g. myUsefullProperty. [FIXME define type restriction]
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="type" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>
					Type of property. [FIXME define type restriction]
					<dl>
						<dt>type="java:complete_java_class_name"</dt>
						<dd>field is of type complete_java_class_name e.g.:"java:String", "java:com.sporniket.lang.Date"</dd>
						<dt> type="enum:[EnumName]:Comma,separated,values"</dt>
						<dd> field is of type MyClass.EnumName, or MyClass. &amp;lt;FieldName&amp;gt; if EnumName is not specified. EnumName is a public static enum.</dd>
						<dt>type="coll:Interface:ImplementationType:ItemType:{notNull|isolated}:Instanciation parameters"</dt>
						<dd>
							<ul>
								<li>coll : collection - either list or set - of ItemType.</li>
								<li>
									the strategy for the collection management :
									<dl>
										<dt>notNull</dt>
										<dd> instanciate an empty ImplementationType if the collection is null</dd>
										<dt>isolated</dt>
										<dd> instantiate an empty ImplementationType and the getter provide a copy of the list (items are not cloned)</dd>
										<dd> add, remove, clear, addAll are proxied, and there are "Xxx__add", "Xxx_remove", "Xxx_clear" and "Xxx_addAll" events, if events are fired.</dd>
										<dd> contains, isEmpty are proxied</dd>
									</dl>
								</li>
								<li>An empty instanciation will be "new ImplementationType&amp;lt;ItemType&amp;gt;(Instanciation parameters)". A clone instanciation will be "new ImplementationType&amp;lt;ItemType&amp;gt;(Source collection)"</li>
							</ul>
						</dd>
						<dt>type="map:ImplementationType:KeyType:ValueType:{notNull|isolated}:Instanciation parameters"</dt>
						<dd>
							<ul>
								<li>Map pairing an instance of KeyType with an instance of ValueType.</li>
								<li>
									the strategy for the collection management :
									<dl>
										<dt>notNull</dt>
										<dd> instanciate an empty ImplementationType if the map is null</dd>
										<dt>isolated</dt>
										<dd> instantiate an empty ImplementationType and the getter provide a copy of the map (entries are not cloned)</dd>
										<dd> put, remove, clear are proxied, and there are "Xxx__put", "Xxx_remove", "Xxx_clear" events.</dd>
										<dd> containsKey, containsValue, isEmpty are proxied</dd>
									</dl>
								</li>
								<li>If appliable, the instanciation will be "new ImplementationType&amp;lt;KeyType,ValueType&amp;gt;(parameters).</li>
							</ul>
						</dd>
					</dl>
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="mode" type="PropertyMode" use="required">
			<xs:annotation>
				<xs:documentation>
					Javabean features :
					<dl>
						<dt>basic</dt>
						<dd>Unbounded properties.</dd>
						<dt>boundable</dt>
						<dd>Bounded properties, one can add a PropertyChangeListener on this property.</dd>
						<dt>vetoable</dt>
						<dd>Vetoed properties, one can add a VetoableChangeListener on this property.</dd>
					</dl>
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="Bean">
		<xs:annotation>
			<xs:documentation>Description of a javabean.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="annotation" type="GroupAnnotation" minOccurs="0" maxOccurs="1" />
			<xs:element name="property" type="Property" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Name of the Java class, following the usual naming convention, e.g. MyUsefullBean. [FIXME define type restriction]
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="extends" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Name of a Java class that is extended by the generated class, following the usual naming convention, e.g. MyUsefullBean. [FIXME define type restriction]
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="Package">
		<xs:annotation>
			<xs:documentation>Description of a package of javabeans (Java classes will be generated in the specified package).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="annotation" type="GroupAnnotation" minOccurs="0" maxOccurs="1" />
			<xs:element name="bean" type="Bean" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Name of the Java package, following the usual naming convention, e.g. my.usefull.package. [FIXME define type restriction]
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="BeanSet">
		<xs:annotation>
			<xs:documentation>Description of a set of javabeans.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="annotation" type="SetAnnotation" minOccurs="0" maxOccurs="1" />
			<xs:element name="package" type="Package" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<!-- root -->
	<xs:element name="javabeanset" type="BeanSet">
		<xs:annotation>
			<xs:documentation>Specification for a collection of sets of javabeans.</xs:documentation>
		</xs:annotation>
	</xs:element>
</xs:schema>